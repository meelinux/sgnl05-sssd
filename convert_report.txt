/* Report generated by PDK at 2025-01-07 11:09:04 +0100 */


--- /home/kathkel1/tmp/sgnl05-sssd/metadata.json	2025-01-07 11:00:46.028351227 +0100
+++ /home/kathkel1/tmp/sgnl05-sssd/metadata.json.pdknew	2025-01-07 11:09:04.052732189 +0100
@@ -7,50 +7,107 @@
   "source": "git://github.com/sgnl05/sgnl05-sssd.git",
   "project_page": "https://github.com/meelinux/sgnl05-sssd",
   "issues_url": "https://github.com/sgnl05/sgnl05-sssd/issues",
-  "tags": ["sssd", "authentication", "ldap", "active-directory", "ad", "freeipa", "ipa", "idm"],
+  "dependencies": [
+    {
+      "name": "puppetlabs/stdlib",
+      "version_requirement": ">= 5.2.0 < 9.0.0"
+    }
+  ],
   "operatingsystem_support": [
     {
       "operatingsystem": "Amazon",
-      "operatingsystemrelease": ["2"]
+      "operatingsystemrelease": [
+        "2"
+      ]
     },
     {
       "operatingsystem": "RedHat",
-      "operatingsystemrelease": ["5","6","7","8"]
+      "operatingsystemrelease": [
+        "5",
+        "6",
+        "7",
+        "8"
+      ]
     },
     {
       "operatingsystem": "CentOS",
-      "operatingsystemrelease": ["5","6","7"]
+      "operatingsystemrelease": [
+        "5",
+        "6",
+        "7"
+      ]
     },
     {
       "operatingsystem": "Fedora",
-      "operatingsystemrelease": ["30","31","32","33"]
+      "operatingsystemrelease": [
+        "30",
+        "31",
+        "32",
+        "33"
+      ]
     },
     {
       "operatingsystem": "Gentoo",
-      "operatingsystemrelease": ["3","4"]
+      "operatingsystemrelease": [
+        "3",
+        "4"
+      ]
     },
     {
       "operatingsystem": "OracleLinux",
-      "operatingsystemrelease": ["5","6","7"]
+      "operatingsystemrelease": [
+        "5",
+        "6",
+        "7"
+      ]
     },
     {
       "operatingsystem": "Ubuntu",
-      "operatingsystemrelease": ["14.04","16.04","18.04","20.04","22.04"]
+      "operatingsystemrelease": [
+        "14.04",
+        "16.04",
+        "18.04",
+        "20.04",
+        "22.04"
+      ]
     },
     {
       "operatingsystem": "Debian",
-      "operatingsystemrelease": ["7", "8", "9", "10", "11"]
+      "operatingsystemrelease": [
+        "7",
+        "8",
+        "9",
+        "10",
+        "11"
+      ]
     },
     {
       "operatingsystem": "Suse",
-      "operatingsystemrelease": ["11", "12", "15"]
+      "operatingsystemrelease": [
+        "11",
+        "12",
+        "15"
+      ]
     }
   ],
   "requirements": [
-    {"name":"puppet","version_requirement":">= 5.5.10 < 7.0.0" }
+    {
+      "name": "puppet",
+      "version_requirement": ">= 5.5.10 < 7.0.0"
+    }
   ],
-  "dependencies": [
-    {"name":"puppetlabs/stdlib","version_requirement":">= 5.2.0 < 9.0.0"}
-  ]
+  "tags": [
+    "sssd",
+    "authentication",
+    "ldap",
+    "active-directory",
+    "ad",
+    "freeipa",
+    "ipa",
+    "idm"
+  ],
+  "pdk-version": "3.2.0",
+  "template-url": "pdk-default#3.2.0",
+  "template-ref": "tags/3.2.0-0-gb257ef1"
 }


--- /home/kathkel1/tmp/sgnl05-sssd/.gitignore	2025-01-07 10:49:04.512355341 +0100
+++ /home/kathkel1/tmp/sgnl05-sssd/.gitignore.pdknew	2025-01-07 11:09:04.053514715 +0100
@@ -1,42 +1,29 @@
-# Default .gitignore for Ruby
-*.gem
-*.rbc
-.bundle
-.config
-coverage
-InstalledFiles
-lib/bundler/man
-pkg
-rdoc
-spec/reports
-test/tmp
-test/version_tmp
-tmp
-Gemfile.lock
-
-# YARD artifacts
+.git/
+.*.sw[op]
+.metadata
 .yardoc
-_yardoc
-doc/
-
-# Vim
-*.swp
-
-# Eclipse
-.project
-
-# Visual Studio Code
-.vscode/
-
-# OS X
+.yardwarns
+*.iml
+/.bundle/
+/.idea/
+/.vagrant/
+/coverage/
+/bin/
+/doc/
+/Gemfile.local
+/Gemfile.lock
+/junit/
+/log/
+/pkg/
+/spec/fixtures/manifests/
+/spec/fixtures/modules/*
+/tmp/
+/vendor/
+/convert_report.txt
+/update_report.txt
 .DS_Store
-
-# Puppet
-coverage/
-spec/fixtures/manifests/*
-spec/fixtures/modules/*
-log/
-
-# Emacs
-*~
+.project
+.envrc
+/inventory.yaml
+/spec/fixtures/litmus_inventory.yaml


--- /home/kathkel1/tmp/sgnl05-sssd/Gemfile	2025-01-07 10:49:04.516355363 +0100
+++ /home/kathkel1/tmp/sgnl05-sssd/Gemfile.pdknew	2025-01-07 11:09:04.053979133 +0100
@@ -1,60 +1,78 @@
 source ENV['GEM_SOURCE'] || 'https://rubygems.org'
 
-if (facterversion = ENV['FACTER_GEM_VERSION'])
-  gem 'facter', facterversion, :require => false
-else
-  gem 'facter', :require => false
-end
+def location_for(place_or_version, fake_version = nil)
+  git_url_regex = %r{\A(?<url>(https?|git)[:@][^#]*)(#(?<branch>.*))?}
+  file_url_regex = %r{\Afile:\/\/(?<path>.*)}
 
-if (puppetversion = ENV['PUPPET_GEM_VERSION'])
-  gem 'puppet', puppetversion, :require => false
-else
-  gem 'puppet', :require => false
+  if place_or_version && (git_url = place_or_version.match(git_url_regex))
+    [fake_version, { git: git_url[:url], branch: git_url[:branch], require: false }].compact
+  elsif place_or_version && (file_url = place_or_version.match(file_url_regex))
+    ['>= 0', { path: File.expand_path(file_url[:path]), require: false }]
+  else
+    [place_or_version, { require: false }]
+  end
 end
 
-group :unit_tests do
-  gem 'puppet-lint-absolute_classname-check',             :require => false
-  gem 'puppet-lint-absolute_template_path',               :require => false
-  gem 'puppet-lint-appends-check',                        :require => false
-  gem 'puppet-lint-empty_string-check',                   :require => false
-  gem 'puppet-lint-file_ensure-check',                    :require => false
-  gem 'puppet-lint-leading_zero-check',                   :require => false
-  gem 'puppet-lint-spaceship_operator_without_tag-check', :require => false
-  gem 'puppet-lint-strict_indent-check',                  :require => false
-  gem 'puppet-lint-trailing_comma-check',                 :require => false
-  gem 'puppet-lint-trailing_newline-check',               :require => false
-  gem 'puppet-lint-undef_in_function-check',              :require => false
-  gem 'puppet-lint-unquoted_string-check',                :require => false
-  gem 'puppet-lint-variable_contains_upcase',             :require => false
-  gem 'puppet-lint-version_comparison-check',             :require => false
-  gem 'puppetlabs_spec_helper',                           :require => false
-  gem 'rspec-puppet-facts',                               :require => false
-end
-
 group :development do
-  gem 'simplecov', :require => false
-  # gem 'guard-rake',       :require => false
-  gem 'librarian-puppet', :require => false
+  gem "json", '= 2.1.0',                         require: false if Gem::Requirement.create(['>= 2.5.0', '< 2.7.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.3.0',                         require: false if Gem::Requirement.create(['>= 2.7.0', '< 3.0.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.5.1',                         require: false if Gem::Requirement.create(['>= 3.0.0', '< 3.0.5']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.6.1',                         require: false if Gem::Requirement.create(['>= 3.1.0', '< 3.1.3']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "json", '= 2.6.3',                         require: false if Gem::Requirement.create(['>= 3.2.0', '< 4.0.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "racc", '~> 1.4.0',                        require: false if Gem::Requirement.create(['>= 2.7.0', '< 3.0.0']).satisfied_by?(Gem::Version.new(RUBY_VERSION.dup))
+  gem "deep_merge", '~> 1.0',                    require: false
+  gem "voxpupuli-puppet-lint-plugins", '~> 5.0', require: false
+  gem "facterdb", '~> 1.18',                     require: false
+  gem "metadata-json-lint", '~> 4.0',            require: false
+  gem "rspec-puppet-facts", '~> 3.0',            require: false
+  gem "dependency_checker", '~> 1.0.0',          require: false
+  gem "parallel_tests", '= 3.12.1',              require: false
+  gem "pry", '~> 0.10',                          require: false
+  gem "simplecov-console", '~> 0.9',             require: false
+  gem "puppet-debugger", '~> 1.0',               require: false
+  gem "rubocop", '~> 1.50.0',                    require: false
+  gem "rubocop-performance", '= 1.16.0',         require: false
+  gem "rubocop-rspec", '= 2.19.0',               require: false
+  gem "rb-readline", '= 0.5.5',                  require: false, platforms: [:mswin, :mingw, :x64_mingw]
 end
-
+group :development, :release_prep do
+  gem "puppet-strings", '~> 4.0',         require: false
+  gem "puppetlabs_spec_helper", '~> 7.0', require: false
+end
 group :system_tests do
-  gem 'beaker', '~> 4.x',             :require => false
-  gem 'beaker-rspec',                 :require => false
-  gem 'beaker-puppet',                :require => false
-  gem 'beaker-docker',                :require => false
-  gem 'serverspec',                   :require => false
-  gem 'beaker-puppet_install_helper', :require => false
-  gem 'beaker-module_install_helper', :require => false
+  gem "puppet_litmus", '~> 1.0',   require: false, platforms: [:ruby, :x64_mingw]
+  gem "CFPropertyList", '< 3.0.7', require: false, platforms: [:mswin, :mingw, :x64_mingw]
+  gem "serverspec", '~> 2.41',     require: false
 end
 
-if puppetversion && puppetversion < '5.0'
-  gem 'semantic_puppet', :require => false
+puppet_version = ENV['PUPPET_GEM_VERSION']
+facter_version = ENV['FACTER_GEM_VERSION']
+hiera_version = ENV['HIERA_GEM_VERSION']
+
+gems = {}
+
+gems['puppet'] = location_for(puppet_version)
+
+# If facter or hiera versions have been specified via the environment
+# variables
+
+gems['facter'] = location_for(facter_version) if facter_version
+gems['hiera'] = location_for(hiera_version) if hiera_version
+
+gems.each do |gem_name, gem_params|
+  gem gem_name, *gem_params
 end
 
-gem 'metadata-json-lint',     :require => false
-gem 'public_suffix', '1.4.6', :require => false
-gem 'puppet-strings',         :require => false
-gem 'redcarpet',              :require => false
+# Evaluate Gemfile.local and ~/.gemfile if they exist
+extra_gemfiles = [
+  "#{__FILE__}.local",
+  File.join(Dir.home, '.gemfile'),
+]
 
-# vim:ft=ruby
+extra_gemfiles.each do |gemfile|
+  if File.file?(gemfile) && File.readable?(gemfile)
+    eval(File.read(gemfile), binding)
+  end
+end
+# vim: syntax=ruby


--- /home/kathkel1/tmp/sgnl05-sssd/Rakefile	2025-01-07 10:49:04.516355363 +0100
+++ /home/kathkel1/tmp/sgnl05-sssd/Rakefile.pdknew	2025-01-07 11:09:04.054341077 +0100
@@ -1,62 +1,10 @@
+# frozen_string_literal: true
+
+require 'bundler'
+require 'puppet_litmus/rake_tasks' if Gem.loaded_specs.key? 'puppet_litmus'
 require 'puppetlabs_spec_helper/rake_tasks'
-require 'puppet-lint/tasks/puppet-lint'
 require 'puppet-syntax/tasks/puppet-syntax'
-require 'metadata-json-lint/rake_task'
+require 'puppet-strings/tasks' if Gem.loaded_specs.key? 'puppet-strings'
 
-exclude_paths = [
-  'modules/**/*',
-  'pkg/**/*',
-  'spec/**/*',
-  'vendor/**/*'
-]
-
-PuppetLint.configuration.fail_on_warnings = true
-PuppetLint.configuration.relative = true
-PuppetLint.configuration.send('disable_80chars')
-PuppetLint.configuration.send('disable_140chars')
-PuppetLint.configuration.ignore_paths = exclude_paths
-PuppetSyntax.exclude_paths = exclude_paths
-
-Rake::Task[:default].prerequisites.clear
-task :default => :all
-
-desc 'Run acceptance tests'
-RSpec::Core::RakeTask.new(:acceptance) do |t|
-  t.pattern = 'spec/acceptance'
-end
-
-desc 'Clean up modules / pkg'
-task :clean do
-  sh 'rm -rf modules pkg spec/fixtures'
-end
-
-task :success do
-  puts "\n\e[32mAll tests passing...\e[0m"
-end
-
-# Puppet Strings (Documentation generation from inline comments)
-# See: https://github.com/puppetlabs/puppet-strings#rake-tasks
-require 'puppet-strings/tasks'
-
-desc 'Alias for strings:generate'
-task :doc => ['strings:generate']
-
-desc 'Generate REFERENCE.md'
-task :reference do
-  sh 'puppet strings generate --format markdown'
-end
-
-desc 'Run all'
-task :all => [
-  :clean,
-  :test,
-  :success
-]
-
-desc 'Run validate, lint and spec tests.'
-task :test do
-  [:lint, :validate, :syntax, :spec, :doc, :reference].each do |test|
-    Rake::Task[test].invoke
-  end
-end
+PuppetLint.configuration.send('disable_relative')


--- /home/kathkel1/tmp/sgnl05-sssd/spec/spec_helper.rb	2025-01-07 10:49:04.516355363 +0100
+++ /home/kathkel1/tmp/sgnl05-sssd/spec/spec_helper.rb.pdknew	2025-01-07 11:09:04.054905947 +0100
@@ -1,29 +1,76 @@
+# frozen_string_literal: true
+
+RSpec.configure do |c|
+  c.mock_with :rspec
+end
+
 require 'puppetlabs_spec_helper/module_spec_helper'
 require 'rspec-puppet-facts'
+
+require 'spec_helper_local' if File.file?(File.join(File.dirname(__FILE__), 'spec_helper_local.rb'))
+
 include RspecPuppetFacts
 
-RSpec.configure do |config|
-  config.formatter = :documentation
-  config.before :each do
-    # Ensure that we don't accidentally cache facts and environment between
-    # test cases.  This requires each example group to explicitly load the
-    # facts being exercised with something like
-    # Facter.collection.loader.load(:ipaddress)
-    Facter.clear
-    Facter.clear_messages
+default_facts = {
+  puppetversion: Puppet.version,
+  facterversion: Facter.version,
+}
+
+default_fact_files = [
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_facts.yml')),
+  File.expand_path(File.join(File.dirname(__FILE__), 'default_module_facts.yml')),
+]
+
+default_fact_files.each do |f|
+  next unless File.exist?(f) && File.readable?(f) && File.size?(f)
+
+  begin
+    require 'deep_merge'
+    default_facts.deep_merge!(YAML.safe_load(File.read(f), permitted_classes: [], permitted_symbols: [], aliases: true))
+  rescue StandardError => e
+    RSpec.configuration.reporter.message "WARNING: Unable to load #{f}: #{e}"
   end
-  config.default_facts = {
-    :environment => 'rp_env',
-    :domain      => 'example.com',
-    :osfamily => 'RedHat',
-    :operatingsystem => 'RedHat',
-    :operatingsystemmajrelease => '7',
-    :os => {
-      'family'  => 'RedHat',
-      'release' => {
-        'major' => '7',
-      },
-    },
-  }
 end
+
+# read default_facts and merge them over what is provided by facterdb
+default_facts.each do |fact, value|
+  add_custom_fact fact, value, merge_facts: true
+end
+
+RSpec.configure do |c|
+  c.default_facts = default_facts
+  c.before :each do
+    # set to strictest setting for testing
+    # by default Puppet runs at warning level
+    Puppet.settings[:strict] = :warning
+    Puppet.settings[:strict_variables] = true
+  end
+  c.filter_run_excluding(bolt: true) unless ENV['GEM_BOLT']
+  c.after(:suite) do
+    RSpec::Puppet::Coverage.report!(0)
+  end
+
+  # Filter backtrace noise
+  backtrace_exclusion_patterns = [
+    %r{spec_helper},
+    %r{gems},
+  ]
+
+  if c.respond_to?(:backtrace_exclusion_patterns)
+    c.backtrace_exclusion_patterns = backtrace_exclusion_patterns
+  elsif c.respond_to?(:backtrace_clean_patterns)
+    c.backtrace_clean_patterns = backtrace_exclusion_patterns
+  end
+end
+
+# Ensures that a module is defined
+# @param module_name Name of the module
+def ensure_module_defined(module_name)
+  module_name.split('::').reduce(Object) do |last_module, next_module|
+    last_module.const_set(next_module, Module.new) unless last_module.const_defined?(next_module, false)
+    last_module.const_get(next_module, false)
+  end
+end
+
+# 'spec_overrides' from sync.yml will appear below this line
